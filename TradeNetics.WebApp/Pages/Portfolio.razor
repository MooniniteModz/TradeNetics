@page "/portfolio"
@using TradeNetics.WebApp.Data
@using TradeNetics.Shared.Models
@inject ICryptoDataService CryptoDataService
@implements IDisposable

<PageTitle>Portfolio - TradeNetics</PageTitle>

<!-- GitHub-style Page Header -->
<div class="d-flex justify-content-between align-items-center mb-6">
    <div>
        <h1 style="font-size: 24px; font-weight: 600; margin: 0 0 8px; color: var(--color-fg-default);">Portfolio Holdings</h1>
        <p style="margin: 0; color: var(--color-fg-muted); font-size: 16px;">
            Your cryptocurrency portfolio overview and asset allocation
        </p>
    </div>
    <div class="d-flex gap-2">
        <button class="github-btn">
            <i class="fe fe-pie-chart github-btn-icon"></i>
            Rebalance
        </button>
        <button class="github-btn github-btn-primary">
            <i class="fe fe-plus github-btn-icon"></i>
            Add Asset
        </button>
    </div>
</div>

<!-- Portfolio Summary -->
<div class="github-stats-grid">
    <div class="github-stat-card">
        <div class="github-stat-icon">
            <i class="fe fe-dollar-sign"></i>
        </div>
        <div class="github-stat-content">
            <h3>$@(_totalValue.ToString("N0"))</h3>
            <p>Total Value</p>
        </div>
    </div>
    
    <div class="github-stat-card">
        <div class="github-stat-icon">
            <i class="fe fe-trending-up"></i>
        </div>
        <div class="github-stat-content">
            <h3 class="@(_totalChange >= 0 ? "text-success" : "text-danger")">
                @(_totalChange >= 0 ? "+" : "")@(_totalChange.ToString("N2"))%
            </h3>
            <p>24h Change</p>
        </div>
    </div>
    
    <div class="github-stat-card">
        <div class="github-stat-icon">
            <i class="fe fe-layers"></i>
        </div>
        <div class="github-stat-content">
            <h3>@(_portfolioHoldings.Count)</h3>
            <p>Assets</p>
        </div>
    </div>
    
    <div class="github-stat-card">
        <div class="github-stat-icon">
            <i class="fe fe-shield"></i>
        </div>
        <div class="github-stat-content">
            <h3>Medium</h3>
            <p>Risk Level</p>
        </div>
    </div>
</div>

<!-- Portfolio Holdings and Allocation -->
<div style="display: grid; grid-template-columns: 2fr 1fr; gap: var(--space-6); margin-bottom: var(--space-6);">
    <!-- Holdings Table -->
    <div class="github-card">
        <div class="github-card-header">
            <h2 class="github-card-title">Holdings</h2>
            <div class="d-flex gap-2">
                <button class="github-btn github-btn-sm">
                    <i class="fe fe-filter github-btn-icon"></i>
                    Filter
                </button>
                <button class="github-btn github-btn-sm">
                    <i class="fe fe-refresh-cw github-btn-icon"></i>
                    Refresh
                </button>
            </div>
        </div>
        <div class="github-card-body" style="padding: 0;">
            @if (_portfolioHoldings.Any())
            {
                <table class="github-table">
                    <thead>
                        <tr>
                            <th>Asset</th>
                            <th>Balance</th>
                            <th>Value (USD)</th>
                            <th>24h Change</th>
                            <th>Allocation</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var holding in _portfolioHoldings.OrderByDescending(h => h.MarketValue))
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-3">
                                        <span class="crypto-symbol">@GetCryptoSymbol(holding.Symbol)</span>
                                        <div>
                                            <strong>@holding.Symbol</strong>
                                            <div class="text-muted" style="font-size: 12px;">@holding.Name</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <div class="crypto-price">@holding.Quantity.ToString("N6")</div>
                                        <div class="text-muted" style="font-size: 12px;">$@holding.CurrentPrice.ToString("N2")</div>
                                    </div>
                                </td>
                                <td>
                                    <strong>$@holding.MarketValue.ToString("N2")</strong>
                                </td>
                                <td>
                                    <span class="@(holding.Change24h >= 0 ? "github-label github-label-success" : "github-label github-label-danger")">
                                        @(holding.Change24h >= 0 ? "+" : "")@holding.Change24h.ToString("N2")%
                                    </span>
                                </td>
                                <td>
                                    <div style="display: flex; align-items: center; gap: var(--space-2);">
                                        <div style="width: 60px; background: var(--color-canvas-inset); height: 6px; border-radius: 3px;">
                                            <div style="width: @(holding.AllocationPercentage)%; background: var(--color-accent-fg); height: 100%; border-radius: 3px;"></div>
                                        </div>
                                        <span style="font-size: 12px; font-weight: 600;">@holding.AllocationPercentage.ToString("N1")%</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex gap-1">
                                        <button class="github-btn github-btn-sm">
                                            <i class="fe fe-trending-up github-btn-icon"></i>
                                        </button>
                                        <button class="github-btn github-btn-sm">
                                            <i class="fe fe-trending-down github-btn-icon"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div style="text-align: center; padding: var(--space-8); color: var(--color-fg-muted);">
                    <i class="fe fe-pie-chart" style="font-size: 48px; opacity: 0.3; margin-bottom: var(--space-4);"></i>
                    <h3 style="margin: 0 0 var(--space-2); color: var(--color-fg-muted);">No holdings found</h3>
                    <p style="margin: 0;">Start trading to build your portfolio</p>
                </div>
            }
        </div>
    </div>

    <!-- Allocation Chart -->
    <div class="github-card">
        <div class="github-card-header">
            <h2 class="github-card-title">Asset Allocation</h2>
        </div>
        <div class="github-card-body">
            <div style="text-align: center; margin-bottom: var(--space-4);">
                <!-- Simulated Pie Chart -->
                <div style="width: 200px; height: 200px; border-radius: 50%; background: conic-gradient(var(--color-warning-fg) 0% 45%, var(--color-accent-fg) 45% 75%, var(--color-success-fg) 75% 90%, var(--color-danger-fg) 90% 100%); margin: 0 auto var(--space-4);"></div>
                
                <!-- Legend -->
                <div style="display: flex; flex-direction: column; gap: var(--space-2);">
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <div style="display: flex; align-items: center; gap: var(--space-2);">
                            <div style="width: 12px; height: 12px; background: var(--color-warning-fg); border-radius: 50%;"></div>
                            <span style="font-size: 14px;">Bitcoin</span>
                        </div>
                        <span style="font-weight: 600;">45%</span>
                    </div>
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <div style="display: flex; align-items: center; gap: var(--space-2);">
                            <div style="width: 12px; height: 12px; background: var(--color-accent-fg); border-radius: 50%;"></div>
                            <span style="font-size: 14px;">Ethereum</span>
                        </div>
                        <span style="font-weight: 600;">30%</span>
                    </div>
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <div style="display: flex; align-items: center; gap: var(--space-2);">
                            <div style="width: 12px; height: 12px; background: var(--color-success-fg); border-radius: 50%;"></div>
                            <span style="font-size: 14px;">Solana</span>
                        </div>
                        <span style="font-weight: 600;">15%</span>
                    </div>
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <div style="display: flex; align-items: center; gap: var(--space-2);">
                            <div style="width: 12px; height: 12px; background: var(--color-danger-fg); border-radius: 50%;"></div>
                            <span style="font-size: 14px;">Others</span>
                        </div>
                        <span style="font-weight: 600;">10%</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Portfolio Insights -->
<div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: var(--space-6);">
    <!-- Diversification Score -->
    <div class="github-card">
        <div class="github-card-header">
            <h2 class="github-card-title">Diversification</h2>
        </div>
        <div class="github-card-body">
            <div style="text-align: center; margin-bottom: var(--space-4);">
                <div style="font-size: 48px; font-weight: 700; color: var(--color-warning-fg);">B+</div>
                <div style="color: var(--color-fg-muted); font-size: 14px;">Diversification Score</div>
            </div>
            <div style="display: flex; flex-direction: column; gap: var(--space-2);">
                <div style="display: flex; justify-content: space-between;">
                    <span style="font-size: 14px;">Large Cap</span>
                    <span style="font-weight: 600;">75%</span>
                </div>
                <div style="display: flex; justify-content: space-between;">
                    <span style="font-size: 14px;">Mid Cap</span>
                    <span style="font-weight: 600;">15%</span>
                </div>
                <div style="display: flex; justify-content: space-between;">
                    <span style="font-size: 14px;">Small Cap</span>
                    <span style="font-weight: 600;">10%</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Portfolio Health -->
    <div class="github-card">
        <div class="github-card-header">
            <h2 class="github-card-title">Portfolio Health</h2>
        </div>
        <div class="github-card-body">
            <div style="display: flex; flex-direction: column; gap: var(--space-3);">
                <div>
                    <div style="display: flex; justify-content: space-between; margin-bottom: var(--space-1);">
                        <span style="font-size: 14px;">Risk Score</span>
                        <span style="font-weight: 600;">7/10</span>
                    </div>
                    <div style="width: 100%; background: var(--color-canvas-inset); height: 6px; border-radius: 3px;">
                        <div style="width: 70%; background: var(--color-warning-fg); height: 100%; border-radius: 3px;"></div>
                    </div>
                </div>
                
                <div>
                    <div style="display: flex; justify-content: space-between; margin-bottom: var(--space-1);">
                        <span style="font-size: 14px;">Volatility</span>
                        <span style="font-weight: 600;">Medium</span>
                    </div>
                    <div style="width: 100%; background: var(--color-canvas-inset); height: 6px; border-radius: 3px;">
                        <div style="width: 60%; background: var(--color-accent-fg); height: 100%; border-radius: 3px;"></div>
                    </div>
                </div>
                
                <div>
                    <div style="display: flex; justify-content: space-between; margin-bottom: var(--space-1);">
                        <span style="font-size: 14px;">Liquidity</span>
                        <span style="font-weight: 600;">High</span>
                    </div>
                    <div style="width: 100%; background: var(--color-canvas-inset); height: 6px; border-radius: 3px;">
                        <div style="width: 85%; background: var(--color-success-fg); height: 100%; border-radius: 3px;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Transactions -->
    <div class="github-card">
        <div class="github-card-header">
            <h2 class="github-card-title">Recent Activity</h2>
            <a href="/tradehistory" class="github-btn github-btn-sm">View All</a>
        </div>
        <div class="github-card-body">
            <div style="display: flex; flex-direction: column; gap: var(--space-3);">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <div style="font-weight: 600;">+0.0234 BTC</div>
                        <div style="font-size: 12px; color: var(--color-fg-muted);">2 min ago</div>
                    </div>
                    <span class="github-label github-label-success">Buy</span>
                </div>
                
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <div style="font-weight: 600;">-1.5678 ETH</div>
                        <div style="font-size: 12px; color: var(--color-fg-muted);">15 min ago</div>
                    </div>
                    <span class="github-label github-label-danger">Sell</span>
                </div>
                
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <div style="font-weight: 600;">+12.345 SOL</div>
                        <div style="font-size: 12px; color: var(--color-fg-muted);">1 hour ago</div>
                    </div>
                    <span class="github-label github-label-success">Buy</span>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<PortfolioHolding> _portfolioHoldings = new();
    private decimal _totalValue = 0m;
    private decimal _totalChange = 0m;
    private Timer? _refreshTimer;

    protected override async Task OnInitializedAsync()
    {
        await LoadPortfolioData();
        
        // Set up auto-refresh every 30 seconds
        _refreshTimer = new Timer(async _ => await InvokeAsync(LoadPortfolioData), null, TimeSpan.FromSeconds(30), TimeSpan.FromSeconds(30));
    }

    private async Task LoadPortfolioData()
    {
        try
        {
            _portfolioHoldings = await CryptoDataService.GetPortfolioHoldingsAsync();
            _totalValue = _portfolioHoldings.Sum(h => h.MarketValue);
            
            if (_portfolioHoldings.Any())
            {
                var weightedChange = _portfolioHoldings
                    .Where(h => h.MarketValue > 0)
                    .Sum(h => h.Change24h * (h.MarketValue / _totalValue));
                _totalChange = weightedChange;
            }
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading portfolio data: {ex.Message}");
        }
    }

    private string GetCryptoSymbol(string symbol)
    {
        return symbol.Replace("USDT", "").ToLower() switch
        {
            "btc" => "₿",
            "eth" => "Ξ",
            "sol" => "◎",
            "ada" => "₳",
            "dot" => "●",
            "link" => "⧉",
            "bnb" => "⬢",
            "xrp" => "✕",
            "matic" => "▲",
            "avax" => "🔺",
            _ => "●"
        };
    }

    public void Dispose()
    {
        _refreshTimer?.Dispose();
    }
}